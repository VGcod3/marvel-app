{"version":3,"file":"static/js/364.3436cf28.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/errorWrapper/ErrorWrapper.js","components/ad/Ad.js","components/comicsList/ComicsList.js","components/pages/comicsPage.js","hooks/scrollLoad.js","hooks/storage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from 'react'\r\nimport errorImage from './error.gif'\r\nimport './errorMessage.css';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img id=\"errorImage\" src={errorImage} alt=\"OOOOOPS, there there is not a chaaracter with this ID\" />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import React, { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nexport default class ErrorWrapper extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}","import './ad.css'\r\nimport React from 'react'\r\n// import avengersLogo from '.../src/resources/img/Avengers_logo.png'\r\nimport avengersLogo from '../../../src/resources/img/Avengers_logo.png'\r\nimport avengers from '../../../src/resources/img/Avengers.png'\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst Ad = () => {\r\n  // const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  return (\r\n    <div className='ad'>\r\n\r\n      <div className=\"begin\">\r\n        <img className='avengers' src={avengers} alt=\"logo\" />\r\n        <span className=\"label\">\r\n          New comics every week <br />\r\n          Stay tuned!\r\n        </span>\r\n      </div>\r\n\r\n      <img className=\"avengersLogo\" src={avengersLogo} alt=\"logo\" />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ad;","import React, { useState, useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './comicsList.scss';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Ad from '../ad/Ad'\n\nimport useMarvelService from '../../services/MarvelService';\nimport { useScroll } from '../../hooks/scrollLoad'\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const offsetRef = useRef(offset)\n    offsetRef.current = offset; // upload modern offset value so that it could be used inside callback\n\n\n    const { loading, error, getComics, getAllComics } = useMarvelService();\n\n    const { newItemLoading, setNewItemLoading } = useScroll(onRequest)\n\n    function onRequest(initial) {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n        getAllComics(8, offsetRef.current)\n            .then(onComicsListLoaded)\n\n    }\n\n    function onComicsListLoaded(newComicsList) {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) =>\n        (<li className=\"comics__item\" key={i}>\n            <Link to={`/comics/${item.id}`}>\n                <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n                <div className=\"comics__item-name\">{item.title}</div>\n                <div className=\"comics__item-price\">{item.price}</div>\n            </Link>\n        </li>)\n        );\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            <Ad />\n\n\n            {errorMessage}\n            {spinner}\n            {items}\n\n\n            <button\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest()}\n                className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import React from 'react';\r\nimport ComicsList from '../comicsList/ComicsList'\r\nimport ErrorWrapper from \"../errorWrapper/ErrorWrapper\";\r\n\r\n\r\nconst ComicsPage = () => (\r\n  <>\r\n    <ErrorWrapper>\r\n      <ComicsList />\r\n    </ErrorWrapper>\r\n  </>\r\n)\r\n\r\nexport default ComicsPage;","import { useState, useEffect } from 'react'\r\n\r\nexport const useScroll = (hookHandler) => {\r\n  const [newItemLoading, setNewItemLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newItemLoading) hookHandler();\r\n  }, [newItemLoading])\r\n\r\n  const onScroll = () => {\r\n    if (window.innerHeight + window.pageYOffset + 1000 >= document.body.offsetHeight) {\r\n      setNewItemLoading(true);\r\n    }\r\n  };\r\n\r\n  return { newItemLoading, setNewItemLoading }\r\n}","class myStorage {\r\n  constructor(key, expire = 1200, storageType = localStorage) {\r\n    this.key = key;\r\n    this.storageType = storageType;\r\n    this.expire = expire;\r\n  }\r\n\r\n  set(value) {\r\n    this.storageType.setItem(this.key, JSON.stringify(value));\r\n  }\r\n\r\n  get() {\r\n    return JSON.parse(this.storageType.getItem(this.key));\r\n  }\r\n\r\n  clear() {\r\n    this.storageType.setItem(this.key, null);\r\n  }\r\n\r\n  /*  isEmpty() {\r\n     if (this.storageType.getItem(this.key) === null || this.storageType.getItem(this.key) === undefined) {\r\n       return true;\r\n     }\r\n     return false;\r\n   } */\r\n\r\n  isEmpty = () => !this.get();\r\n};\r\n\r\nexport default myStorage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp()\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _publicKey = process.env.REACT_APP_MARVEL_API_KEY;\r\n\r\n\r\n  const getAllCharacters = async (offset = 200) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&apikey=${_publicKey}`);\r\n\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getCharacter = async (characterId) => {\r\n    const res = await request(`${_apiBase}characters/${characterId}?apikey=${_publicKey}`)\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (limit = 8, offset = 0) => {\r\n    const res = await request(`${_apiBase}/comics?noVariants=true&limit=${limit}&offset=${offset}&apikey=${_publicKey}`);\r\n    return res.data.results.map(_transformComics)\r\n  }\r\n\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?apikey=${_publicKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComics = (comics) => ({\r\n    id: comics.id,\r\n    title: comics.title,\r\n    description: comics.description || 'There is no description',\r\n    pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n    thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n    language: comics.textObjects.language || 'en-us',\r\n    price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n  })\r\n\r\n\r\n  const _transformCharacter = ({ name, description, thumbnail, urls, id, comics }) => ({\r\n    name, id,\r\n    description: description ? description.length >= 210 ? description.slice(0, 210) + \"...\" : description\r\n      : \"There is no description for this character\",\r\n    thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n    homepage: urls[0].url,\r\n    wiki: urls[1].url,\r\n    comics: comics.items\r\n  })\r\n\r\n  return { loading, error, getAllCharacters, getCharacter, clearError, getComics, getAllComics }\r\n\r\n}\r\n\r\nexport default useMarvelService","import { useState, useCallback } from 'react'\r\nimport myStorage from './storage'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {\r\n    'content-type': 'application/json'\r\n  }) => {\r\n\r\n    setLoading(true)\r\n\r\n    try {\r\n      const urlInStorage = new myStorage(`${url}`);\r\n\r\n      if (urlInStorage.isEmpty()) {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw Error(`Could not fetch ${url}, status: ${response.status} `)\r\n        }\r\n\r\n        const result = await response.json();\r\n\r\n        urlInStorage.set(result)\r\n        return await result;\r\n      }      \r\n      return urlInStorage.get()\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      setError(error.message)\r\n      throw error\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null)\r\n  })\r\n\r\n  return { request, error, loading, clearError }\r\n}\r\n\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","src","errorImage","alt","ErrorWrapper","state","error","errorInfo","console","log","this","setState","props","children","Component","className","avengers","avengersLogo","useState","comicsList","setComicsList","offset","setOffset","comicsEnded","setComicsEnded","offsetRef","useRef","current","useMarvelService","loading","getAllComics","getComics","useScroll","onRequest","newItemLoading","setNewItemLoading","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","to","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","hookHandler","useEffect","window","addEventListener","onScroll","removeEventListener","innerHeight","pageYOffset","document","body","offsetHeight","myStorage","key","expire","storageType","localStorage","isEmpty","get","value","setItem","JSON","stringify","parse","getItem","setLoading","setError","request","useCallback","url","method","headers","urlInStorage","fetch","response","ok","Error","status","json","result","set","message","clearError","useHttp","_apiBase","_publicKey","process","getAllCharacters","res","data","results","_transformCharacter","getCharacter","characterId","limit","_transformComics","comics","description","pageCount","path","extension","language","textObjects","prices","name","urls","slice","homepage","wiki","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}